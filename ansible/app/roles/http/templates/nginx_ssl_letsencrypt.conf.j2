## SERVING_DOCKER_PORT {{app_name}}_{{app_release}}
upstream app_server_{{app_name}} {
  server 127.0.0.1:{{app_docker_port.stdout}};
}

server {
  listen 80
  server_name {{app_domain}};
  rewrite ^(.*) https://{{app_domain}}$1 permanent;
}

server {
  listen       443 ssl;
  server_name  {{app_domain}};

  ssl_certificate_key  /etc/letsencrypt/live/{{app_domain}}/privkey.pem;
  ssl_certificate      /etc/letsencrypt/live/{{app_domain}}/fullchain.pem;

  if ($host !~* ^({{app_domain}})$ ) {
    return 444;
  }

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4';
  ssl_prefer_server_ciphers   on;
#  ssl_session_timeout  5m;

  access_log /var/log/nginx/{{app_domain}}.{{app_release}}.access.log json_analytics;
  error_log /var/log/nginx/{{app_domain}}.{{app_release}}.error.log info;

  keepalive_timeout 5;

  # nginx should serve up static files and never send to the WSGI server
  location /static {
    autoindex on;
    alias /var/www/static/{{app_domain}}/{{app_release}};
  }

  location /media {
    autoindex on;
    alias {{http_media_base}}/{{app_domain}};
  }

  location / {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $http_host;
    proxy_redirect off;

    if (!-f $request_filename) {
      proxy_pass http://app_server_{{app_name}};
      break;
    }
  }
}
